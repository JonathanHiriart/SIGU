@page "/AgregarUsuarios"  
@rendermode InteractiveServer
@inject NavigationManager nav  
@inject UsuarioServicioLogin usuarioServicioLogin  
@inject UsuarioAltaUseCase usuarioAltaUseCase  
<PageTitle>Agregar Usuario</PageTitle>  

@using SIGU.Aplicacion.DTOs  
@using SIGU.Aplicacion.Enums  

@if (cargando)  
{  
    <p>Cargando...</p>  
}  
else if (!tienePermiso)  
{  
    <div class="alert alert-danger">  
        No tienes permiso para agregar usuarios.  
    </div>  
}  
else  
{  
    <h3>Agregar Usuario</h3>  
    <p>Completa los siguientes campos para agregar un nuevo usuario:</p>  
    <label class="form-label">Nombre
        <input @bind="usuarioNuevo.Nombre" class="form-control mb-2" placeholder="Nombre" />
    </label>  
    <label class="col-form-label">Apellido
        <input @bind="usuarioNuevo.Apellido" class="form-control mb-2" placeholder="Apellido" />
    </label>  
    <label class="col-form-label">DNI
        <input @bind="usuarioNuevo.DNI" class="form-control mb-2" placeholder="DNI" />
    </label>  
    <label class="col-form-label">Email
        <input @bind="usuarioNuevo.Email" class="form-control mb-2" placeholder="Correo Electrónico" />
    </label>  
    <label class="col-form-label">Telefóno  
        <input @bind="usuarioNuevo.Telefono" class="form-control mb-2" placeholder="Teléfono" />  
    </label>  
    <label class="col-form-label">Contraseña  
        <input @bind="usuarioNuevo.Contrasenia" class="form-control mb-2" placeholder="Contraseña" type="password" />  
    </label>
    <button class="btn btn-primary mb-2" @onclick="AgregarUsuario">Agregar nuevo usuario</button>


    @if (!string.IsNullOrEmpty(mensaje))  
    {  
        <div class="mt-2">@mensaje</div>  
    }  
}  

@code {
    UsuarioDTO usuarioNuevo = new UsuarioDTO();  
    string mensaje = string.Empty;  
    bool tienePermiso = false;  
    bool cargando = true;
    Usuario actual = null!;

    protected override async Task OnInitializedAsync()  
    {  

        try  
        {
            actual = usuarioServicioLogin.GetUser();
            if (actual == null)  
            {  
                nav.NavigateTo("/");  
                return;  
            }  
            tienePermiso = actual.Permisos.Contains(Permiso.UsuarioAlta);  
        }  
        catch (Exception ex)  
        {  
            tienePermiso = false;  
            Console.WriteLine("ERROR EN OnInitializedAsync: " + ex.Message);  
        }  

        cargando = false;  
    }  

    private async Task AgregarUsuario()  
    {  
        Console.WriteLine("Agregando usuario...");
        try  
        {  
            await usuarioAltaUseCase.EjecutarAsync(usuarioNuevo,actual.Id);  
            Console.WriteLine("Usuario agregado correctamente.");  
            usuarioNuevo = new UsuarioDTO();  
        }  
        catch (Exception ex)  
        {  
            mensaje = $"Error: {ex.Message}";  
        }  
    }  
}